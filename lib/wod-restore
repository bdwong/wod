#!/bin/bash -e
# wod-restore: Restore a WordPress backup from the command line.
#
# Usage:
#
#   wod restore <target-name> <backup-directory>
#
# Where <backup-directory> contains the following files:
#   backup*-plugins.zip
#   backup*-themes.zip
#   backup*-uploads.zip
#   backup*-others.zip
#   backup*-db.gz

export SCRIPT_HOME=${SCRIPT_HOME:/usr/lib/wod/bin}
. $SCRIPT_HOME/functions
wod_init

if [ -z "$2" ]; then
	print_help $0
	exit 1
fi

TARGET_NAME="$1"
ensure_target "$TARGET_NAME"
backupdir="$2"

if [[ ! -d $backupdir ]]; then
    echo "\"$backupdir\" is not a directory."
    print_help $0
    exit 1
fi

pushd `target_dir "$TARGET_NAME"` >/dev/null

for content_type in plugins themes uploads others; do
    if [ "${backupdir}/backup*-${content_type}.zip" == "" ]; then
        echo "Warning: ${content_type} file not found."
        continue
    fi

    if [[ -d site/wp-content/$content_type ]]; then
        sudo rm -rf site/wp-content/$content_type
    fi

    # The content may be broken up into multiple zip files.
    for zipfile in ${backupdir}/backup*-${content_type}*.zip; do
        # Use single bracket 'test' for correct substitution order.
        # Note an array will also work; see https://stackoverflow.com/questions/17510339/how-can-i-force-bash-to-expand-a-variable-to-pass-it-as-an-argument
        if [ ! -f $zipfile ]; then
            echo "Warning: ${zipfile} is not a valid archive."
            continue
        fi
        sudo unzip -od site/wp-content $zipfile
    done

done

# Fix file permissions
sudo chown -R www-data:www-data site/wp-content

# Restore the database last.
zipfile=`echo ${backupdir}/backup*-db.gz`
# Fall back to a sql filename.
if ! [[ -f $zipfile ]]; then
    zipfile=`echo ${backupdir}/*.sql.gz`
fi
if ! [[ -f $zipfile ]]; then
    echo "Warning: database file not found."
else
    # UpdraftPlus has header comments that contain useful information
    header=$(zcat "$zipfile"|sed -ne '/^#/ p;/^$/ q')
    echo "$header"
    # Turn comments into underscore variables
    eval $(echo "$header"|sed -ne '/: / { s/\(.*\): \(.*\)/\L\1="\2"/; s/^# //;s/ /_/g; p}')

    if [ -n "$table_prefix" ]; then
        echo "table prefix: $table_prefix"

        # Modify the table prefix
        if [ ! -f 'site/wp-config.php' ]; then
            echo "Warning: can't find wp-config.php."
        else
            sudo sed -i'' -e "s/^\\\$table_prefix =.*\$/\\\$table_prefix = '${table_prefix}';/" site/wp-config.php \
            || echo "Warning: can't update the WordPress table prefix!"
        fi
    fi

    zcat $zipfile \
        | sed -e '/^# -----/ a\' -e "/*\!40101 SET sql_mode='ONLY_FULL_GROUP_BY,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */;" \
        | wp db import -
fi

popd >/dev/null